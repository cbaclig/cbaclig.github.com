---
layout: post
title: !binary |-
  VXBncmFkaW5nIFJ1YnkgMS44LjYgaW4gSW5zdGFudFJhaWxz
wordpress_id: 6
wordpress_url: !binary |-
  aHR0cDovL3d3dy5jaHJpc2JhY2xpZy5jb20vP3A9Ng==
date: 2010-02-19 14:31:00.000000000 -08:00
---
We've recently started using the new <a href="http://github.com/carlhuda/bundler"> Bundler gem </a> at work with our Rails 2.3.5 app since it's what <a href="http://heroku.com/">Heroku</a> supports to install gems and is what <a href="http://litanyagainstfear.com/blog/2009/10/14/gem-bundler-is-the-future/">Rails 3 is going to use for gem management</a>.  <br />Long story short, when writing a rake task to push our app toHeroku, calling `bundle lock` was causing an error (EXEC FORMAT ERROR)on Vista. After googling a ton, I came across <a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/27912">a discussion</a>about ruby not being able to find paths to bat files correctly. Thishad been patched, however InstantRails was still using Ruby 1.8.6 withvery few patches. So, I decided to upgrade to ruby 1.8.7 on InstantRails and what follows are how I got everything to play nicelytogether.<br /><ol><li>    In your Instant Rails directory, rename the folder "ruby" to "ruby-old"  </li><li>    Go to the <a href="http://rubyinstaller.org/download.html">Ruby Installer site</a> and    download an installer for your desired Ruby version and install it     to C:/InstantRails/ruby.  If it asks you to add something to your PATH variable,    don't do that.  We'll fix it oursevles in a bit. (Note: Be careful about what    version you are upgrading to as this may introduce some bugs depending on what was    released.)  </li><li>    Next, we have to adjust RubyGems to reflect this change.  In your HOME directory (in    Vista the default is C:/Users/[your username]) find .gemrc.  This is the config file    for RubyGems.  It should look something like this    <code>      --- <br />      :benchmark: false<br />      :update_sources: true<br />      :bulk_threshold: 1000<br />      :verbose: true<br />      :sources: <br />      - http://gems.rubyforge.org/<br />      - http://gemcutter.org<br />      - http://gems.github.com<br />      :backtrace: false<br />    </code>        At the very bottom add    <br />    <code>      :gempath:      <br />        - C:/InstantRails/ruby-old/lib/ruby/gems/1.8     </code>    <br />Now `gem list` should show you all of your old gems and `gemenvironment` should list "C:/InstantRails/ruby-old/lib/ruby/gems/1.8"under GEMPATHS.&nbsp; (Once you've decided everything has gone smoothly andall gems are working properly, you can later move the contents <code>C:/InstantRails/ruby-old/lib/ruby/gems/1.8</code>to another location and update .gemrc to reflect this new path. Note: Ihaven't gotten this far yet, but it seems like it should be able towork) </li><li>    Next, we need to change our system PATH to reflect our changes.  Go to    Control Panel &gt; System and Maintenance &gt; System    (You can also right-click "Computer" in the start menu.)    Click "Advanced System Settings" on the left and select "Environment Variables."    Under System Variables add "C:\InstantRails\ruby_old\bin" and click OK. (Remember to that    paths are separated by semi-colons.)        <br />        From here, you should be able to access all your gem commands from the command line    as you have before.  (If you've had any terminals open using the "Create New Rails App..."    button in InstantRails, close that and retry to let the PATH changes take affect.  You    may also need to restart InstantRails entirely.)  </li><li>    You should also be able to run `ruby script/server` from the root directory of your app    to start a server.  If not, try reinstalling Mongrel using `gem install mongrel.`  Depending    on the new version of Ruby you're installing, the installed Mongrel gem bundled with     InstantRails may not be compatible with the new Ruby platoform.  Reinstalling    the mongrel gem will detect your new version of Ruby and install the correct version.  </li><li>    If you're using MySQL 5, you may need to copy libmysql.dll from C:/InstantRails/mysql/bin    to C:/InstantRails/ruby/bin.      <a href="http://www.expressionlab.com/2008/7/10/libmysql-dll-error-with-rails-2-1-on-instantrails">      See this.    </a>  </li></ol>Everything should now be back to normal with InstantRails.  You should be able to select yourapp from the InstantRails and start it as usual with your new shiny version of Ruby!
